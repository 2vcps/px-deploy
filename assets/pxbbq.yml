apiVersion: v1
kind: Namespace                 
metadata:
  name: pxbbq
  labels:
---
  apiVersion: "v1"
  kind: "PersistentVolumeClaim"
  metadata: 
    name: "mongodb-pvc"
    namespace: "pxbbq"
    labels: 
      app: "mongo-db"
  spec: 
    accessModes: 
      - ReadWriteOnce
    resources: 
      requests: 
        storage: 5Gi
    storageClassName: px-db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  labels:
    app.kubernetes.io/name: mongo
    app.kubernetes.io/component: backend
  namespace: pxbbq
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: mongo
      app.kubernetes.io/component: backend
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongo
        app.kubernetes.io/component: backend
    spec:
      containers:
      - name: mongo
        image: mongo
        env:
          - name: MONGO_INITDB_ROOT_USERNAME
            value: porxie
          - name: MONGO_INITDB_ROOT_PASSWORD
            value: "porxie"
        args:
          - --bind_ip
          - 0.0.0.0
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-data-dir
          mountPath: /data/db
      volumes:
      - name: mongo-data-dir
        persistentVolumeClaim:
          claimName: mongodb-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    app.kubernetes.io/name: mongo
    app.kubernetes.io/component: backend
  namespace: pxbbq
spec:
  ports:
  - port: 27017
    targetPort: 27017
  type: ClusterIP
  selector:
    app.kubernetes.io/name: mongo
    app.kubernetes.io/component: backend
---
apiVersion: apps/v1
kind: Deployment                 
metadata:
  name: pxbbq-web  
  namespace: pxbbq         
spec:
  replicas: 3                    
  selector:
    matchLabels:
      app: pxbbq-web
  template:                      
    metadata:
      labels:                    
        app: pxbbq-web
    spec:                        
      containers:
      - name: pxbbq-web
        image: eshanks16/pxbbq:v3.2
        env:
        - name: MONGO_INIT_USER
          value: "porxie" #Mongo User with permissions to create additional databases and users. Typically "porxie" or "pds"
        - name: MONGO_INIT_PASS
          value: "porxie" #Required to connect the init user to the database. If using the mongodb yaml supplied, use "porxie"
        - name: MONGO_NODES
          value: "mongo" #COMMA SEPARATED LIST OF MONGO ENDPOINTS. Example: mongo1.dns.name,mongo2.dns.name
        - name: MONGO_PORT
          value: "27017"
        - name: MONGO_USER
          value: porxie #Mongo DB User that will be created by using the Init_User
        - name: MONGO_PASS
          value: "porxie" #Mongo DB Password for User that will be created by using the Init User
        imagePullPolicy: Always
        ports:
          - containerPort: 8080    
---
apiVersion: v1
kind: Service
metadata:
  name: pxbbq-svc
  namespace: pxbbq
  labels:
    app: pxbbq-web
spec:
  ports:
  - port: 80
    targetPort: 8080
  type: LoadBalancer
  selector:
    app: pxbbq-web
