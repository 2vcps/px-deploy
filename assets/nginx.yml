apiVersion: v1
kind: Namespace
metadata:
  name: nginx
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: px-nginx-sc
provisioner: kubernetes.io/portworx-volume
parameters:
  repl: "3"
allowVolumeExpansion: true
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: nginx-pvc
  namespace: nginx
spec:
  storageClassName: px-nginx-sc
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: html
  namespace: nginx
data:
  index.html: |-
    Hello world!
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: nginx
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 3
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: nginx-pvc
      initContainers:
      - name: nginx-init
        image: nginx:latest
        command: [ 'sh', '-c', "cp -r /html/* /usr/share/nginx/html/" ]
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: nginx-pvc
        - mountPath: /html/index.html
          name: nginx-html
          subPath: index.html
      volumes:
      - name: nginx-pvc
        persistentVolumeClaim:
          claimName: nginx-pvc
      - name: nginx-html
        configMap:
          name: html
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: nginx
  labels:
    app: nginx
spec:
  type: NodePort
  ports:
  - name: http
    protocol: TCP
    port: 80
    nodePort: 30080
  selector:
    app: nginx
