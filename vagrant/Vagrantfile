require "base64"
require "yaml"
yaml = YAML.load(File.read("/px-deploy/.px-deploy/deployments/#{ENV['deployment']}.yml"))
env = ({:clusters => yaml['clusters'], :nodes => yaml['nodes'], :px_version => yaml['px_version'], :k8s_version => yaml['k8s_version']})

Vagrant.configure("2") do |config|
  config.vm.synced_folder ".", "/vagrant", disabled: true
  config.vm.provision "file", source: "/px-deploy/.px-deploy/keys/id_rsa.#{yaml['cloud']}.#{yaml['name']}", destination: "/tmp/id_rsa"
  if yaml['cloud'] == "aws"
    config.vm.box = "dummy"
    config.vm.provider :aws do |aws|
      aws.security_groups = yaml['aws__sg']
      aws.keypair_name = "px-deploy.#{yaml['name']}"
      aws.region = yaml['aws_region']
      aws.instance_type = yaml['aws_type']
      aws.ami = yaml['aws__ami']
      aws.subnet_id = yaml['aws__subnet']
      aws.associate_public_ip = true
      aws.block_device_mapping = [{ :DeviceName => "/dev/sda1", "Ebs.DeleteOnTermination" => true, "Ebs.VolumeSize" => 15 }]
    end
  elsif yaml['cloud'] == "gcp"
    config.vm.box = "google/gce"
    config.vm.provider :google do |gcp|
      File.open("/px-deploy/.px-deploy/keys/px-deploy_gcp_#{yaml['gcp__project']}.json", "w") do |line| line.puts(Base64.decode64(yaml['gcp__key'])) end
      gcp.google_project_id = yaml['gcp__project']
      gcp.zone = "#{yaml['gcp_region']}-#{yaml['gcp_zone']}"
      gcp.google_json_key_location = "/px-deploy/.px-deploy/keys/px-deploy_gcp_#{yaml['gcp__project']}.json";
      gcp.image_family = "centos-7"
      gcp.machine_type = yaml['gcp_type']
      gcp.disk_size = 15
      gcp.network = "px-net"
      gcp.subnetwork = "px-subnet"
    end
  end

  config.ssh.username = "centos"
  config.ssh.private_key_path = "/px-deploy/.px-deploy/keys/id_rsa.#{yaml['cloud']}.#{yaml['name']}"
  config.vm.provision "shell", path: "all-common", env: env
  config.vm.provision "shell", path: "#{yaml['platform']}-common"

  (1..yaml['clusters'].to_i).each do |c|
    subnet = "192.168.#{100+c}"
    config.vm.define "#{yaml['name']}-master-#{c}" do |master|
      master.vm.hostname = "master-#{c}"
      if yaml['cloud'] == "aws"
        master.vm.provider :aws do |aws|
          aws.private_ip_address = "#{subnet}.90"
          aws.tags = { "Name" => "master-#{c}", "px-deploy_name" => yaml['name'] }
        end
      elsif yaml['cloud'] == "gcp"
        master.vm.provider :google do |gcp|
          gcp.name = "master-#{c}"
          gcp.network_ip = "#{subnet}.90"
        end
      end
      master.vm.provision "shell", path: "#{yaml['platform']}-master", env: (env.merge({ :cluster => c }))
      yaml['scripts'].each do |i| master.vm.provision "shell", path: "/px-deploy/.px-deploy/scripts/#{i}", env: (env.merge({ :cluster => c, :script => i })) end if !yaml['scripts'].empty?
    end

    (1..yaml['nodes'].to_i).each do |n|
      config.vm.define "#{yaml['name']}-node-#{c}-#{n}" do |node|
        node.vm.hostname = "node-#{c}-#{n}"
        if yaml['cloud'] == "aws"
          node.vm.provider :aws do |aws|
            aws.private_ip_address = "#{subnet}.#{100+n}"
            aws.tags = { "Name" => "node-#{c}-#{n}" }
            d = 97
            yaml['aws_ebs'].split(' ').each do |i|
              (type, size) = i.split(':')
              aws.block_device_mapping.push({:DeviceName => "/dev/sd#{(d+=1).chr}", "Ebs.DeleteOnTermination" => true, "Ebs.VolumeSize" => size, "Ebs.VolumeType" => type })
            end
          end
        elsif yaml['cloud'] == "gcp"
          node.vm.provider :google do |gcp|
            gcp.network_ip = "#{subnet}.#{100+n}"
            gcp.name = "node-#{c}-#{n}"
            d = 0
            yaml['gcp_disks'].split(' ').each do |i|
              (type, size) = i.split(':')
              gcp.additional_disks.push({ :disk_name => "disk-#{c}-#{n}-#{d+=1}", :disk_type => type, :disk_size => size })
            end
          end
        end
        node.vm.provision "shell", path: "#{yaml['platform']}-node", env: (env.merge({ :cluster => c }))
      end
    end
  end
end
