dnf install -y docker python3-pip
systemctl enable --now docker
pip3 install awscli

ln -s /usr/local/bin/aws /usr/bin/aws
eval $(ssh-agent)
cd /tmp
curl -sO https://mirror.openshift.com/pub/openshift-v4/clients/ocp/$ocp4_version/openshift-install-linux-$ocp4_version.tar.gz
curl -sO https://mirror.openshift.com/pub/openshift-v4/clients/ocp/$ocp4_version/openshift-client-linux-$ocp4_version.tar.gz
tar xzf openshift-install-linux-$ocp4_version.tar.gz
tar xzf openshift-client-linux-$ocp4_version.tar.gz
mv openshift-install oc kubectl /usr/bin
rm -f openshift-install-linux-$ocp4_version.tar.gz openshift-client-linux-$ocp4_version.tar.gz

mkdir /root/ocp4
cd /root/ocp4

while [ ! -f "/tmp/ocp4-install-config.yaml" ]; do sleep 5; done
cp /tmp/ocp4-install-config.yaml /root/ocp4/install-config.yaml

echo "cd /root/ocp4 ; openshift-install destroy cluster" >> /px-deploy/platform-delete/ocp4.sh

openshift-install create cluster --log-level=debug
if [ $? -ne 0 ]; then
  echo Failed to deploy Openshift
  exit 1
fi
mkdir /root/.kube
cp /root/ocp4/auth/kubeconfig /root/.kube/config
chmod 600 /root/.kube/config
sg=$(cat terraform.cluster.tfstate | jq -r '.resources[] | select(.name==("worker") and .type==("aws_security_group")).instances[0].attributes.id')

aws configure set default.region $aws_region
aws ec2 authorize-security-group-ingress --group-id $sg --protocol tcp --port 17001-17022 --cidr 0.0.0.0/0
aws ec2 authorize-security-group-ingress --group-id $sg --protocol udp --port 17001-17022 --cidr 0.0.0.0/0

# open NFS Port for RWX
cidr=$(cat terraform.cluster.tfstate | jq -r '.resources[] | select(.name==("private") and .type==("aws_subnet")).instances[0].attributes.cidr_block')
aws ec2 authorize-security-group-ingress --group-id $sg --protocol tcp --port 2049 --cidr $cidr

URL=$(grep 'Access the OpenShift web-console' /root/ocp4/.openshift_install.log |cut -d\" -f4 | cut -d: -f2-)
echo "url $URL" >> /var/log/px-deploy/completed/tracking

CRED=$(grep 'Login to the console' /root/ocp4/.openshift_install.log | cut -d\\ -f4 | cut -d\" -f2)
echo "cred $CRED" >> /var/log/px-deploy/completed/tracking
