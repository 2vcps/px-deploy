GKE_CLUSTER_NAME=px-deploy-$name-$cluster

dnf install -y docker google-cloud-cli-gke-gcloud-auth-plugin
systemctl enable --now docker

#curl -L https://github.com/containerd/containerd/releases/download/v1.6.15/containerd-1.6.15-linux-amd64.tar.gz | tar Cxzvf /usr/local -
#curl -o /etc/systemd/system/containerd.service https://raw.githubusercontent.com/containerd/containerd/main/containerd.service
#mkdir /etc/containerd
#containerd config default | sed 's/SystemdCgroup = false/SystemdCgroup = true/' >/etc/containerd/config.toml
#curl -Lo /usr/sbin/runc https://github.com/opencontainers/runc/releases/download/v1.1.4/runc.amd64
#chmod 755 /usr/sbin/runc
#systemctl daemon-reload
#systemctl enable --now containerd
#systemctl enable --now podman

curl -sL -o /usr/bin/kubectl "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
chmod 755 /usr/bin/kubectl

echo "export USE_GKE_GCLOUD_AUTH_PLUGIN=True" >> /root/.bashrc
source /root/.bashrc

gcloud auth activate-service-account --key-file=/root/gcp.json

# wait for GKE cluster to be ready (might still run in terraform while master node is ready)
STATUS=$(gcloud container clusters describe  $GKE_CLUSTER_NAME  --zone $gcp_region-$gcp_zone  --format=json | jq -r ".status")

while ! [ $STATUS == "RUNNING" ]; do
  echo "Wait for GKE Cluster $GKE_CLUSTER_NAME to get ready. re-check in 20sec"
  sleep 20
  STATUS=$(gcloud container clusters describe  $GKE_CLUSTER_NAME  --zone $gcp_region-$gcp_zone  --format=json | jq -r ".status")
done

gcloud container clusters get-credentials $GKE_CLUSTER_NAME --zone $gcp_region-$gcp_zone
